{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "type": "rectangle",
      "version": 161,
      "versionNonce": 2097660351,
      "isDeleted": false,
      "id": "7mctbBQTpEiwwFCQ2eGbJ",
      "fillStyle": "hachure",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "angle": 0,
      "x": 275,
      "y": 201,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 551,
      "height": 277,
      "seed": 1203996145,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": []
    },
    {
      "type": "text",
      "version": 45,
      "versionNonce": 634787089,
      "isDeleted": false,
      "id": "JgYGmYkQPMeDeZgSUnUq-",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 204,
      "y": 133,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "width": 668,
      "height": 45,
      "seed": 1338292241,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 36,
      "fontFamily": 1,
      "text": "Variable Scope & Data Types in C++",
      "baseline": 32,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "type": "text",
      "version": 7,
      "versionNonce": 1219591615,
      "isDeleted": false,
      "id": "Vgg9vYkLTXhL0xzwakP7r",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 289,
      "y": 229,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 533,
      "height": 180,
      "seed": 429036895,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElementIds": [],
      "fontSize": 16,
      "fontFamily": 1,
      "text": "In this series of C++ tutorials, we will visualize the variable \nscope and data types in the C++ language in this lecture. \nIn our last lesson, we discussed the variable's role and comments. \nIn this C++ tutorial, we are going to cover two important\n concepts of C++:\n\nVariable Scope\nData Types\n",
      "baseline": 174,
      "textAlign": "left",
      "verticalAlign": "top"
    },
    {
      "id": "GoLi8NzTkY3bI_Zhbu7Mm",
      "type": "rectangle",
      "x": 255,
      "y": 548,
      "width": 617,
      "height": 370,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1576234463,
      "version": 154,
      "versionNonce": 1018153041,
      "isDeleted": false,
      "boundElementIds": null
    },
    {
      "id": "RBxuFfz-jBKod9wqgWE9C",
      "type": "text",
      "x": 281,
      "y": 560,
      "width": 567,
      "height": 320,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1770843665,
      "version": 15,
      "versionNonce": 1691083103,
      "isDeleted": false,
      "boundElementIds": null,
      "text": "Before explaining the concept of variable scope, I would like to \nclarify about variables a\nlittle more. Variable can be defined as a container to hold data.\nVariables are of different types, for example:\n\nInt-> Int is used to store integer data e.g (-1, 2, 5,-9, 3, 100).\nFloat-> Float is used to store decimal numbers e.g (0.5, 1.05, 3.5, 10.5)\nChar-> Char is used to store a single character e.g. ('a', 'b',' c', 'd')\nBoolean-> Boolean is used to store \"true\" or \"false.\"\nDouble-> Double is also used to store decimal numbers but \nhas more precision than float, e.g. (10.5895758440339...)\n\nHere is an example to understand variables: int sum = 34; \nmeans that sum is an integer variable that holds value '34' in memory.\n\n",
      "fontSize": 16,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 314
    },
    {
      "id": "eMsGqBX_6UNpUB-2UtAoh",
      "type": "text",
      "x": 268,
      "y": 958,
      "width": 684,
      "height": 45,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 124037137,
      "version": 6,
      "versionNonce": 777931199,
      "isDeleted": false,
      "boundElementIds": null,
      "text": "Syntax for Declaring Variables in C++",
      "fontSize": 36,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 32
    },
    {
      "id": "fkSMpAZqY96JGVoubbUi4",
      "type": "rectangle",
      "x": 261,
      "y": 1016,
      "width": 635,
      "height": 96,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 617838001,
      "version": 121,
      "versionNonce": 1616547121,
      "isDeleted": false,
      "boundElementIds": null
    },
    {
      "id": "whKcE6WBiEPOrNgXH21_8",
      "type": "text",
      "x": 280,
      "y": 1017,
      "width": 280,
      "height": 60,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 943845553,
      "version": 5,
      "versionNonce": 1544566897,
      "isDeleted": false,
      "boundElementIds": null,
      "text": "Data_type Variable_name = Value;\nEx: int a=4; char letter = ‘p’;\nEx: int a=4, b=6;",
      "fontSize": 16,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 54
    },
    {
      "id": "UTqjYNn1VmO77Mon2UQWh",
      "type": "text",
      "x": 276,
      "y": 1149,
      "width": 252,
      "height": 45,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 80985873,
      "version": 20,
      "versionNonce": 1116422047,
      "isDeleted": false,
      "boundElementIds": null,
      "text": "local variable ",
      "fontSize": 36,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 32
    },
    {
      "id": "7jgEBByS_wrUjTHIbPHFP",
      "type": "rectangle",
      "x": 250,
      "y": 1193,
      "width": 629,
      "height": 447,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 794817471,
      "version": 134,
      "versionNonce": 1005237599,
      "isDeleted": false,
      "boundElementIds": null
    },
    {
      "id": "usoCTq9PHh7X7wyn9m3ac",
      "type": "text",
      "x": 273,
      "y": 1209,
      "width": 592,
      "height": 220,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1297127071,
      "version": 13,
      "versionNonce": 1816166705,
      "isDeleted": false,
      "boundElementIds": null,
      "text": "Variable Scope\nThe scope of a variable is the region in the program where the existence\n of that variable is valid. For example, consider this analogy - if\n one person travels to another country illegally,\n we will not consider that country as its scope because \nhe doesn't have the necessary documents to stay in that country.\n\nBase on scope, variables can be classified into two types:\n\nLocal variables\nGlobal variables",
      "fontSize": 16,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 214
    },
    {
      "id": "q0qNCwMuVgDDYfFbPNcti",
      "type": "text",
      "x": 274,
      "y": 1421,
      "width": 493,
      "height": 180,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1431114769,
      "version": 8,
      "versionNonce": 250177905,
      "isDeleted": false,
      "boundElementIds": null,
      "text": "Local variables:\nLocal variables are declared inside the braces \nof any function and can be assessed only from there. \n\nGlobal variables:\nGlobal variables are declared outside any function and can be\n accessed from anywhere.\n\n",
      "fontSize": 16,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 174
    },
    {
      "id": "fvTJipfd73iLvC371VoRM",
      "type": "text",
      "x": 247,
      "y": 1666,
      "width": 222,
      "height": 90,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 534675167,
      "version": 3,
      "versionNonce": 1451838207,
      "isDeleted": false,
      "boundElementIds": null,
      "text": "Data Types\n",
      "fontSize": 36,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 77
    },
    {
      "id": "fPseiusJMFXuinvTdb31O",
      "type": "rectangle",
      "x": 244,
      "y": 1723,
      "width": 697,
      "height": 582.9999999999998,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 700721265,
      "version": 119,
      "versionNonce": 1612900945,
      "isDeleted": false,
      "boundElementIds": null
    },
    {
      "id": "ndtqBfZ3YpJVINCsoKNOY",
      "type": "text",
      "x": 276,
      "y": 1742,
      "width": 1300,
      "height": 580,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1124655985,
      "version": 9,
      "versionNonce": 983791409,
      "isDeleted": false,
      "boundElementIds": null,
      "text": "Data types define the type of data that a variable can hold; for example, an integer variable can hold integer data, a character can hold character data, etc.\n\nData types in C++ are categorized into three groups:\n\nBuilt-in\nUser-defined\nDerived\n1. Built-in Data Types in C++:\nInt\nFloat\nChar\nDouble\nBoolean\n2. User-Defined Data Types in C++:\nStruct\nUnion\nEnum\nNote: We will discuss the concepts of user-defined data types in\nanother lecture. \nFor now, understanding that these are user-defined data types is enough.\n\n3. Derived Data Types in C++:\nArray\nPointer\nFunction\nNote: We will discuss the concept of derived data types in another lecture.\n For now, understanding that these are derived data types is enough.\n\n",
      "fontSize": 16,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 574
    }
  ],
  "appState": {
    "viewBackgroundColor": "#ffffff",
    "gridSize": null,
    "scrollX": 0,
    "scrollY": -1802,
    "zoom": {
      "value": 1,
      "translation": {
        "x": 0,
        "y": 0
      }
    }
  }
}